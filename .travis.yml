language: cpp
sudo: true
dist: trusty
addons:
  apt:
    packages: &1
      - lcov
matrix:
  include:
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *1
        - g++-4.9
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *1
        - g++-5
    env:
    - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *1
        - g++-6
    env:
    - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *1
        - g++-7
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.6
        packages:
        - *1
        - clang-3.6
    env:
    - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.7
        packages:
        - *1
        - clang-3.7
    env:
    - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.8
        packages:
        - *1
        - clang-3.8
    env:
    - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"
  - os: linux
    addons:
      apt:
        sources:
        - llvm-toolchain-trusty-4.0
        packages:
        - *1
        - clang-4.0
    env:
    - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
  - os: linux
    addons:
      apt:
        sources:
        - llvm-toolchain-trusty-5.0
        packages:
        - *1
        - clang-5.0
    env:
    - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
branches:
  only:
  - master
before_install:
  - eval "${MATRIX_EVAL}"
  - mkdir cmake-download &&
    cd cmake-download &&
    curl -O https://cmake.org/files/v3.10/cmake-3.10.0-rc5-Linux-x86_64.sh &&
    bash cmake-3.10.0-rc5-Linux-x86_64.sh --skip-license &&
    cd ..
script:
  - ./scripts/build.sh
after_success:
- for f in $(find build -name '*.gcno'); do gcov-6 $f; done
- bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage
  reports"
cache:
  directories:
    - "$HOME/.hunter/_Base/Cache"
env:
  global:
  - LANG="en_US.UTF-8"
  - PATH="$TRAVIS_BUILD_DIR/cmake-download/bin:$PATH"
